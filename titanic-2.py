# -*- coding: utf-8 -*-
"""TItanic.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NMgulDHAEQaZ6D9zCvpuA95qFx4RJDXw
"""

from google.colab import files

# Upload the Titanic CSV file
uploaded = files.upload()

# Importing libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler

# Load dataset
df = pd.read_csv('Titanic-Dataset.csv')

# Strip whitespace from column names to avoid KeyError (e.g., 'Cabin ')
df.columns = df.columns.str.strip()

# Show first few rows
print("First few rows:")
print(df.head())

# Basic info and missing values
print("\nBasic info:")
print(df.info())

print("\nMissing values per column:")
print(df.isnull().sum())

print("\nColumns after cleaning names:")
print(df.columns.tolist())

# Step 4: Handle missing values
print("\nFilling missing values...")

df['Age'] = df['Age'].fillna(df['Age'].median())
df['Embarked'] = df['Embarked'].fillna(df['Embarked'].mode()[0])

# Only drop Cabin if it exists
if 'Cabin' in df.columns:
    df.drop(columns=['Cabin'], inplace=True)
    print("Cabin column dropped.")
else:
    print("Cabin column not found. Skipping drop.")

# Step 5: Encode categorical variables
print("\nEncoding categorical variables...")
df = pd.get_dummies(df, columns=['Sex', 'Embarked'], drop_first=True)

print("\nEncoded dataframe sample:")
print(df.head())

# Step 6: Normalize/Standardize numerical features
scaler = StandardScaler()
numerical_cols = ['Age', 'Fare', 'SibSp', 'Parch']
df[numerical_cols] = scaler.fit_transform(df[numerical_cols])

print("\nNumerical features standardized:")
print(df[numerical_cols].describe())

# Step 7: Detect and remove outliers (using Fare as example)
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

# Plot boxplot to visualize Fare outliers
from google.colab import drive
drive.mount('/content/drive')

# Create a folder named 'training_plots' if it doesn't exist
plot_folder = '/content/drive/MyDrive/titanic_plots'
import os
os.makedirs(plot_folder, exist_ok=True)

# Plot boxplot to visualize Fare outliers
plt.figure(figsize=(8, 4))
sns.boxplot(x=df['Fare'])
plt.title("Fare Outliers")
plt.savefig(f'{plot_folder}/fare_boxplot.png', dpi=300, bbox_inches='tight')  # Save to Drive
plt.show()

# Select only numeric columns for correlation
numeric_df = df.select_dtypes(include=[np.number])
print(numeric_df.columns)

# Plot correlation heatmap
plt.figure(figsize=(10, 8))
sns.heatmap(numeric_df.corr(), annot=True, cmap='coolwarm', fmt='.2f')
plt.title('Feature Correlation Heatmap (Numeric Columns Only)')
plt.savefig(f'{plot_folder}/correlation_heatmap.png', dpi=300, bbox_inches='tight')  # Save to Drive
plt.show()

# Calculate IQR for Fare and remove outliers
Q1 = df['Fare'].quantile(0.25)
Q3 = df['Fare'].quantile(0.75)
IQR = Q3 - Q1

df = df[(df['Fare'] >= Q1 - 1.5 * IQR) & (df['Fare'] <= Q3 + 1.5 * IQR)]

# Print shape after outlier removal
print("\nShape after removing outliers:", df.shape)

# Step 8: Save cleaned dataset to Google Drive
from google.colab import drive
#drive.mount('/content/drive')

df.to_csv('/content/drive/MyDrive/titanic_plots/cleaned_titanic.csv', index=False)
print("\nCleaned dataset saved to Google Drive as 'cleaned_titanic.csv'")